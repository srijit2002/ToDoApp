{"version":3,"sources":["reducer.js","context.js","Modal.js","Card.js","Container.js","app.js","index.js"],"names":["reducer","state","action","type","modalCotent","payload","modalClass","isModalOpen","tasks","content","id","Date","getTime","toString","modifiedTasks","map","task","input","buttonText","filter","Error","AppContext","React","createContext","AppProvider","children","useState","isInEditingMode","setIsInEditingMode","setId","setInput","defaultState","localStorage","getItem","JSON","parse","useReducer","dispatch","useEffect","setItem","stringify","timeout","setTimeout","clearTimeout","Provider","value","handleEvent","handleEdit","handleDelete","idToBeDeleted","clearAll","Modal","className","Card","useContext","onClick","Container","onChange","e","target","placeholder","index","length","App","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.be43e778.chunk.js","sourcesContent":["\r\n\r\n\r\nconst reducer=(state,action)=>{\r\n\r\n    if(action.type===\"INVALID_INPUT\"){\r\n        return {...state, modalCotent:action.payload, modalClass:\"danger\",isModalOpen:true}\r\n    }\r\n\r\n    else if(action.type===\"ADD_ITEM\"){\r\n       \r\n        return {...state,tasks:[...state.tasks,{content:action.payload,id:new Date().getTime().toString()}] ,modalCotent:\"Item Added Successfully\", modalClass:\"success\",isModalOpen:true}\r\n    }\r\n\r\n    else if(action.type===\"EDIT_ITEM\"){\r\n        const modifiedTasks=state.tasks.map((task)=>{\r\n            if(task.id===action.payload.id){\r\n                return {...task,content:action.payload.input}\r\n            }\r\n            else{\r\n                return task\r\n            }\r\n        })\r\n        return {...state,tasks:modifiedTasks,modalCotent:\"Item Edited Successfully\", modalClass:\"success\",isModalOpen:true,buttonText:\"Add\"}\r\n    }\r\n\r\n    else if(action.type===\"DELETE_ITEM\"){\r\n        \r\n        const modifiedTasks=state.tasks.filter((task)=>(task.id!==action.payload));\r\n        return {...state,tasks:modifiedTasks,modalCotent:\"Item Deleted Successfully\", modalClass:\"success\",isModalOpen:true}\r\n    }\r\n\r\n\r\n    else if(action.type===\"HIDE\"){\r\n        return {...state,isModalOpen:false}\r\n    }\r\n\r\n\r\n    else if(action.type===\"EDITING_MODE\"){\r\n        return {...state,buttonText:action.payload,modalCotent:\"Item is in editing mode\", modalClass:\"warning\",isModalOpen:true}\r\n    }\r\n    else if(action.type===\"CLEAR_ALL\"){\r\n        return {...state,tasks:[],modalCotent:\"All Items cleared successfuly\", modalClass:\"success\",isModalOpen:true}\r\n    }\r\n    else{\r\n      throw new Error(\"Invalid Action Type\");\r\n    }\r\n      \r\n  \r\n\r\n}\r\nexport default reducer;","import React, { useState, useReducer, useEffect } from \"react\";\r\nimport reducer from \"./reducer\";\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const [isInEditingMode,setIsInEditingMode]=useState(false);\r\n    const [id,setId]=useState(\"\");\r\n    const [input,setInput]=useState(\"\");\r\n\r\n    const defaultState={\r\n        tasks:(localStorage.getItem(\"PendingTasks\")&&JSON.parse(localStorage.getItem(\"PendingTasks\")))||[],\r\n        isModalOpen:false,\r\n        modalCotent:\"\",\r\n        modalClass:\"danger\",\r\n        buttonText:\"Add\"\r\n    }\r\n\r\n    const [state,dispatch]=useReducer(reducer,defaultState); \r\n\r\n   \r\n\r\n    useEffect(()=>{\r\n        if(state.tasks!==[]){\r\n            localStorage.setItem(\"PendingTasks\",JSON.stringify(state.tasks));\r\n        }\r\n    },[state.tasks])\r\n\r\n    const handleEvent=()=>{\r\n        if(input){\r\n            if(isInEditingMode){\r\n                dispatch({type:\"EDIT_ITEM\",payload:{id,input}});\r\n                setInput(\"\");\r\n                setIsInEditingMode(false);\r\n                setId(\"\");\r\n            }\r\n            else{\r\n                dispatch({type:\"ADD_ITEM\",payload:input})\r\n                setInput(\"\");\r\n            }\r\n        }\r\n        else{\r\n            dispatch({type:\"INVALID_INPUT\",payload:\"Please enter some text\"})\r\n            setInput(\"\");\r\n        }\r\n    }\r\n\r\n    const handleEdit=(id,content)=>{\r\n        setId(id);\r\n        setIsInEditingMode(true);\r\n        setInput(content);\r\n        dispatch({type:\"EDITING_MODE\",payload:\"Save\"})\r\n    }\r\n\r\n    const handleDelete=(idToBeDeleted)=>{\r\n      dispatch({type:\"DELETE_ITEM\",payload:idToBeDeleted});\r\n   }\r\n   useEffect(()=>{\r\n       if(state.isModalOpen){\r\n       const timeout=setTimeout(() => {\r\n            dispatch({type:\"HIDE\",action:\"Hide\"})\r\n        }, 3000);\r\n        return ()=>{clearTimeout(timeout)}\r\n       }\r\n  },[state])\r\n \r\n  const clearAll=()=>{\r\n      dispatch({type:\"CLEAR_ALL\",payload:\"success\"})\r\n  }\r\n    return (\r\n        <AppContext.Provider value={{isInEditingMode,state,input,setInput,handleEvent,handleEdit,handleDelete,clearAll}}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\nexport { AppContext, AppProvider };","import React from \"react\";\r\n\r\nconst Modal = ({modalCotent,modalClass}) => {\r\n    return (\r\n        <div className={`alert alert--${modalClass}`}>\r\n            {modalCotent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, { useContext } from \"react\";\r\nimport {AppContext} from \"./context\";\r\nimport { BiEdit} from \"react-icons/bi\";\r\nimport {RiDeleteBin6Line} from \"react-icons/ri\";\r\nconst Card = ({ content,id }) => {\r\n\r\n    const {handleEdit,handleDelete}=useContext(AppContext);\r\n    return (\r\n        <div className=\"card\">\r\n            <h2 className=\"card__title\">{content}</h2>\r\n            <div className=\"card__icons\">\r\n                <BiEdit className=\"icon icon--edit\" onClick={()=>handleEdit(id,content)}/>\r\n                <RiDeleteBin6Line className=\"icon icon--delete\" onClick={()=>handleDelete(id)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import { useContext } from \"react\";\r\nimport { AppContext } from \"./context\"\r\nimport Modal from \"./Modal\";\r\nimport Card from \"./Card\";\r\n\r\n\r\nconst Container = () => {\r\n    const {state,input,setInput,handleEvent,clearAll} = useContext(AppContext);\r\n    return (\r\n        <>\r\n           {(state.isModalOpen)&&<Modal {...state}/>}\r\n            <div className=\"container\">\r\n              <div className=\"input__container\">\r\n                    <input type=\"text\" value={input} onChange={(e)=>{setInput(e.target.value)}} placeholder=\"Enter Task\" />\r\n                    <button className=\"btn\" onClick={handleEvent}>{state.buttonText}</button>\r\n                </div>\r\n                <div className=\"tasks__container\">\r\n                   {state.tasks.map((task,index)=>{\r\n                       return(\r\n                           <Card key={task.id} {...task}/>\r\n                       )\r\n                   })}\r\n                </div>\r\n               {(state.tasks.length!==0)&&<button className=\"btn btn--clr\" onClick={clearAll}>Clear All</button>} \r\n            </div>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Container;","import React from \"react\";\r\nimport Container from \"./Container\";\r\nimport {AppProvider} from \"./context\";\r\n\r\nconst App=()=>{\r\n    return(\r\n  \r\n        <AppProvider>\r\n          <Container/>\r\n        </AppProvider>\r\n  \r\n    )}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from \"./app\";\r\nimport \"./style.css\";\r\nReactDom.render(<App/>,document.getElementById(\"root\"));"],"sourceRoot":""}